<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 软件作者：何栋宇 qq:709876443
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:648595928
-->
<mapper namespace="com.magicalcoder.youyaboot.service.score.mapper.ScoreMapper">
    <!-- Score -->
    <resultMap id="resultMap" type="Score">
        <id column="id" property="id"/>
        <result column="after_sale" property="afterSale" />
        <result column="apply" property="apply" />
        <result column="gene_situ" property="geneSitu" />
        <result column="standard" property="standard" />
        <result column="tech_require" property="techRequire" />
        <result column="signature" property="signature" />
        <result column="category_id" property="categoryId" />
        <result column="date" property="date" />
        <result column="project_id" property="projectId" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="Score"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="Score"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="Score"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="Score"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="Score">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="Score">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">`id`,</if>
            <if test="afterSaleIgnore_ == null or !afterSaleIgnore_">`after_sale`,</if>
            <if test="applyIgnore_ == null or !applyIgnore_">`apply`,</if>
            <if test="geneSituIgnore_ == null or !geneSituIgnore_">`gene_situ`,</if>
            <if test="standardIgnore_ == null or !standardIgnore_">`standard`,</if>
            <if test="techRequireIgnore_ == null or !techRequireIgnore_">`tech_require`,</if>
            <if test="signatureIgnore_ == null or !signatureIgnore_">`signature`,</if>
            <if test="categoryIdIgnore_ == null or !categoryIdIgnore_">`category_id`,</if>
            <if test="dateIgnore_ == null or !dateIgnore_">`date`,</if>
            <if test="projectIdIgnore_ == null or !projectIdIgnore_">`project_id`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">`id`,</if>
         <if test="afterSaleNotIgnore_ != null and afterSaleNotIgnore_">`after_sale`,</if>
         <if test="applyNotIgnore_ != null and applyNotIgnore_">`apply`,</if>
         <if test="geneSituNotIgnore_ != null and geneSituNotIgnore_">`gene_situ`,</if>
         <if test="standardNotIgnore_ != null and standardNotIgnore_">`standard`,</if>
         <if test="techRequireNotIgnore_ != null and techRequireNotIgnore_">`tech_require`,</if>
         <if test="signatureNotIgnore_ != null and signatureNotIgnore_">`signature`,</if>
         <if test="categoryIdNotIgnore_ != null and categoryIdNotIgnore_">`category_id`,</if>
         <if test="dateNotIgnore_ != null and dateNotIgnore_">`date`,</if>
         <if test="projectIdNotIgnore_ != null and projectIdNotIgnore_">`project_id`</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">`id`,</if> `after_sale`,`apply`,`gene_situ`,`standard`,`tech_require`,`signature`,`category_id`,`date`,`project_id`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="afterSale!=null">#{afterSale},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="apply!=null">#{apply},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="geneSitu!=null">#{geneSitu},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="standard!=null">#{standard},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="techRequire!=null">#{techRequire},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="signature!=null">#{signature},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="categoryId!=null">#{categoryId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="date!=null">#{date,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="projectId!=null">#{projectId},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">`id`,</if>
                <if test="afterSale!=null">`after_sale`,</if>
                <if test="apply!=null">`apply`,</if>
                <if test="geneSitu!=null">`gene_situ`,</if>
                <if test="standard!=null">`standard`,</if>
                <if test="techRequire!=null">`tech_require`,</if>
                <if test="signature!=null">`signature`,</if>
                <if test="categoryId!=null">`category_id`,</if>
                <if test="date!=null">`date`,</if>
                <if test="projectId!=null">`project_id`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="afterSale!=null">#{afterSale},</when></choose>
                <choose><when test="apply!=null">#{apply},</when></choose>
                <choose><when test="geneSitu!=null">#{geneSitu},</when></choose>
                <choose><when test="standard!=null">#{standard},</when></choose>
                <choose><when test="techRequire!=null">#{techRequire},</when></choose>
                <choose><when test="signature!=null">#{signature},</when></choose>
                <choose><when test="categoryId!=null">#{categoryId},</when></choose>
                <choose><when test="date!=null">#{date,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="projectId!=null">#{projectId},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if> `after_sale`,`apply`,`gene_situ`,`standard`,`tech_require`,`signature`,`category_id`,`date`,`project_id`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.afterSale!=null">#{item.afterSale},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.apply!=null">#{item.apply},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.geneSitu!=null">#{item.geneSitu},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.standard!=null">#{item.standard},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.techRequire!=null">#{item.techRequire},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.signature!=null">#{item.signature},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.categoryId!=null">#{item.categoryId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.date!=null">#{item.date,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.projectId!=null">#{item.projectId},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if>
                <if test="item.afterSale!=null">`after_sale`,</if>
                <if test="item.apply!=null">`apply`,</if>
                <if test="item.geneSitu!=null">`gene_situ`,</if>
                <if test="item.standard!=null">`standard`,</if>
                <if test="item.techRequire!=null">`tech_require`,</if>
                <if test="item.signature!=null">`signature`,</if>
                <if test="item.categoryId!=null">`category_id`,</if>
                <if test="item.date!=null">`date`,</if>
                <if test="item.projectId!=null">`project_id`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.afterSale!=null">#{item.afterSale},</when></choose>
                <choose><when test="item.apply!=null">#{item.apply},</when></choose>
                <choose><when test="item.geneSitu!=null">#{item.geneSitu},</when></choose>
                <choose><when test="item.standard!=null">#{item.standard},</when></choose>
                <choose><when test="item.techRequire!=null">#{item.techRequire},</when></choose>
                <choose><when test="item.signature!=null">#{item.signature},</when></choose>
                <choose><when test="item.categoryId!=null">#{item.categoryId},</when></choose>
                <choose><when test="item.date!=null">#{item.date,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.projectId!=null">#{item.projectId},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="afterSale!=null">`after_sale`=#{afterSale}</when> <otherwise> `after_sale`=NULL</otherwise> </choose>,
                    <choose> <when test="apply!=null">`apply`=#{apply}</when> <otherwise> `apply`=NULL</otherwise> </choose>,
                    <choose> <when test="geneSitu!=null">`gene_situ`=#{geneSitu}</when> <otherwise> `gene_situ`=NULL</otherwise> </choose>,
                    <choose> <when test="standard!=null">`standard`=#{standard}</when> <otherwise> `standard`=NULL</otherwise> </choose>,
                    <choose> <when test="techRequire!=null">`tech_require`=#{techRequire}</when> <otherwise> `tech_require`=NULL</otherwise> </choose>,
                    <choose> <when test="signature!=null">`signature`=#{signature}</when> <otherwise> `signature`=NULL</otherwise> </choose>,
                    <choose> <when test="categoryId!=null">`category_id`=#{categoryId}</when> <otherwise> `category_id`=NULL</otherwise> </choose>,
                    <choose> <when test="date!=null">`date`=#{date,jdbcType=TIMESTAMP}</when> <otherwise> `date`=NULL</otherwise> </choose>,
                    <choose> <when test="projectId!=null">`project_id`=#{projectId}</when> <otherwise> `project_id`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="afterSale!=null">`after_sale`=#{afterSale},</when></choose>
                    <choose><when test="apply!=null">`apply`=#{apply},</when></choose>
                    <choose><when test="geneSitu!=null">`gene_situ`=#{geneSitu},</when></choose>
                    <choose><when test="standard!=null">`standard`=#{standard},</when></choose>
                    <choose><when test="techRequire!=null">`tech_require`=#{techRequire},</when></choose>
                    <choose><when test="signature!=null">`signature`=#{signature},</when></choose>
                    <choose><when test="categoryId!=null">`category_id`=#{categoryId},</when></choose>
                    <choose><when test="date!=null">`date`=#{date,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="projectId!=null">`project_id`=#{projectId},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `id` = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.afterSale!=null">`after_sale`=#{item.afterSale}</when> <otherwise> `after_sale`=NULL</otherwise> </choose>,
                    <choose> <when test="item.apply!=null">`apply`=#{item.apply}</when> <otherwise> `apply`=NULL</otherwise> </choose>,
                    <choose> <when test="item.geneSitu!=null">`gene_situ`=#{item.geneSitu}</when> <otherwise> `gene_situ`=NULL</otherwise> </choose>,
                    <choose> <when test="item.standard!=null">`standard`=#{item.standard}</when> <otherwise> `standard`=NULL</otherwise> </choose>,
                    <choose> <when test="item.techRequire!=null">`tech_require`=#{item.techRequire}</when> <otherwise> `tech_require`=NULL</otherwise> </choose>,
                    <choose> <when test="item.signature!=null">`signature`=#{item.signature}</when> <otherwise> `signature`=NULL</otherwise> </choose>,
                    <choose> <when test="item.categoryId!=null">`category_id`=#{item.categoryId}</when> <otherwise> `category_id`=NULL</otherwise> </choose>,
                    <choose> <when test="item.date!=null">`date`=#{item.date,jdbcType=TIMESTAMP}</when> <otherwise> `date`=NULL</otherwise> </choose>,
                    <choose> <when test="item.projectId!=null">`project_id`=#{item.projectId}</when> <otherwise> `project_id`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.afterSale!=null">`after_sale`=#{item.afterSale},</when></choose>
                    <choose> <when test="item.apply!=null">`apply`=#{item.apply},</when></choose>
                    <choose> <when test="item.geneSitu!=null">`gene_situ`=#{item.geneSitu},</when></choose>
                    <choose> <when test="item.standard!=null">`standard`=#{item.standard},</when></choose>
                    <choose> <when test="item.techRequire!=null">`tech_require`=#{item.techRequire},</when></choose>
                    <choose> <when test="item.signature!=null">`signature`=#{item.signature},</when></choose>
                    <choose> <when test="item.categoryId!=null">`category_id`=#{item.categoryId},</when></choose>
                    <choose> <when test="item.date!=null">`date`=#{item.date,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.projectId!=null">`project_id`=#{item.projectId},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `id` = #{item.id}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        hx.score
    </sql>

   <sql id="whereSqlModel">
        <if test="id!=null "> and `id` = #{id}</if>
        <if test="afterSale!=null "> and `after_sale` = #{afterSale}</if>
        <if test="apply!=null "> and `apply` = #{apply}</if>
        <if test="geneSitu!=null "> and `gene_situ` = #{geneSitu}</if>
        <if test="standard!=null "> and `standard` = #{standard}</if>
        <if test="techRequire!=null "> and `tech_require` = #{techRequire}</if>
        <if test="signature!=null "> and `signature` = #{signature}</if>
        <if test="categoryId!=null "> and `category_id` = #{categoryId}</if>
        <if test="date!=null "> and `date` = #{date,jdbcType=TIMESTAMP}</if>
        <if test="projectId!=null "> and `project_id` = #{projectId}</if>
                <if test="categoryIdFirst!=null "> and `category_id` <![CDATA[=]]>
                            #{categoryIdFirst}
                </if>
                <if test="dateFirst!=null "> and `date` <![CDATA[=]]>
                        #{dateFirst,jdbcType=TIMESTAMP}
                </if>
                <if test="projectIdFirst!=null "> and `project_id` <![CDATA[like]]>
                            concat('%',#{projectIdFirst},'%')
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'id'">  `id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'after_sale'">  `after_sale` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'apply'">  `apply` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'gene_situ'">  `gene_situ` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'standard'">  `standard` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'tech_require'">  `tech_require` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'signature'">  `signature` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'category_id'">  `category_id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'date'">  `date` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'project_id'">  `project_id` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'id desc'"> order by  `id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'id asc'"> order by `id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'after_sale desc'"> order by  `after_sale` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'after_sale asc'"> order by `after_sale` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'apply desc'"> order by  `apply` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'apply asc'"> order by `apply` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'gene_situ desc'"> order by  `gene_situ` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'gene_situ asc'"> order by `gene_situ` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'standard desc'"> order by  `standard` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'standard asc'"> order by `standard` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'tech_require desc'"> order by  `tech_require` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'tech_require asc'"> order by `tech_require` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'signature desc'"> order by  `signature` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'signature asc'"> order by `signature` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'category_id desc'"> order by  `category_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'category_id asc'"> order by `category_id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'date desc'"> order by  `date` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'date asc'"> order by `date` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'project_id desc'"> order by  `project_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'project_id asc'"> order by `project_id` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>


    <select id="getDayZhangJia" resultType="String">
        SELECT
            signature
        FROM
            score
        WHERE
            date = #{date}
    </select>

</mapper>
