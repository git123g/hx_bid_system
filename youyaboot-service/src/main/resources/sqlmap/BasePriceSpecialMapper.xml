<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 软件作者：何栋宇 qq:709876443
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:648595928
-->
<mapper namespace="com.magicalcoder.youyaboot.service.basepricespecial.mapper.BasePriceSpecialMapper">
    <!-- BasePriceSpecial -->
    <resultMap id="resultMap" type="BasePriceSpecial">
        <id column="id" property="id"/>
        <result column="project_id" property="projectId" />
        <result column="e_base_point" property="ebasePoint" />
        <result column="e_final_point" property="efinalPoint" />
        <result column="input_time" property="inputTime" />
        <result column="s_base_point" property="sbasePoint" />
        <result column="s_final_point" property="sfinalPoint" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="BasePriceSpecial"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="BasePriceSpecial"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="BasePriceSpecial"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="BasePriceSpecial"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="BasePriceSpecial">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="BasePriceSpecial">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">`id`,</if>
            <if test="projectIdIgnore_ == null or !projectIdIgnore_">`project_id`,</if>
            <if test="ebasePointIgnore_ == null or !ebasePointIgnore_">`e_base_point`,</if>
            <if test="efinalPointIgnore_ == null or !efinalPointIgnore_">`e_final_point`,</if>
            <if test="inputTimeIgnore_ == null or !inputTimeIgnore_">`input_time`,</if>
            <if test="sbasePointIgnore_ == null or !sbasePointIgnore_">`s_base_point`,</if>
            <if test="sfinalPointIgnore_ == null or !sfinalPointIgnore_">`s_final_point`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">`id`,</if>
         <if test="projectIdNotIgnore_ != null and projectIdNotIgnore_">`project_id`,</if>
         <if test="ebasePointNotIgnore_ != null and ebasePointNotIgnore_">`e_base_point`,</if>
         <if test="efinalPointNotIgnore_ != null and efinalPointNotIgnore_">`e_final_point`,</if>
         <if test="inputTimeNotIgnore_ != null and inputTimeNotIgnore_">`input_time`,</if>
         <if test="sbasePointNotIgnore_ != null and sbasePointNotIgnore_">`s_base_point`,</if>
         <if test="sfinalPointNotIgnore_ != null and sfinalPointNotIgnore_">`s_final_point`</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">`id`,</if> `project_id`,`e_base_point`,`e_final_point`,`input_time`,`s_base_point`,`s_final_point`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="projectId!=null">#{projectId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="ebasePoint!=null">#{ebasePoint},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="efinalPoint!=null">#{efinalPoint},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="inputTime!=null">#{inputTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="sbasePoint!=null">#{sbasePoint},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="sfinalPoint!=null">#{sfinalPoint},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">`id`,</if>
                <if test="projectId!=null">`project_id`,</if>
                <if test="ebasePoint!=null">`e_base_point`,</if>
                <if test="efinalPoint!=null">`e_final_point`,</if>
                <if test="inputTime!=null">`input_time`,</if>
                <if test="sbasePoint!=null">`s_base_point`,</if>
                <if test="sfinalPoint!=null">`s_final_point`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="projectId!=null">#{projectId},</when></choose>
                <choose><when test="ebasePoint!=null">#{ebasePoint},</when></choose>
                <choose><when test="efinalPoint!=null">#{efinalPoint},</when></choose>
                <choose><when test="inputTime!=null">#{inputTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="sbasePoint!=null">#{sbasePoint},</when></choose>
                <choose><when test="sfinalPoint!=null">#{sfinalPoint},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if> `project_id`,`e_base_point`,`e_final_point`,`input_time`,`s_base_point`,`s_final_point`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.projectId!=null">#{item.projectId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.ebasePoint!=null">#{item.ebasePoint},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.efinalPoint!=null">#{item.efinalPoint},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.inputTime!=null">#{item.inputTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.sbasePoint!=null">#{item.sbasePoint},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.sfinalPoint!=null">#{item.sfinalPoint},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if>
                <if test="item.projectId!=null">`project_id`,</if>
                <if test="item.ebasePoint!=null">`e_base_point`,</if>
                <if test="item.efinalPoint!=null">`e_final_point`,</if>
                <if test="item.inputTime!=null">`input_time`,</if>
                <if test="item.sbasePoint!=null">`s_base_point`,</if>
                <if test="item.sfinalPoint!=null">`s_final_point`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.projectId!=null">#{item.projectId},</when></choose>
                <choose><when test="item.ebasePoint!=null">#{item.ebasePoint},</when></choose>
                <choose><when test="item.efinalPoint!=null">#{item.efinalPoint},</when></choose>
                <choose><when test="item.inputTime!=null">#{item.inputTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.sbasePoint!=null">#{item.sbasePoint},</when></choose>
                <choose><when test="item.sfinalPoint!=null">#{item.sfinalPoint},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="projectId!=null">`project_id`=#{projectId}</when> <otherwise> `project_id`=NULL</otherwise> </choose>,
                    <choose> <when test="ebasePoint!=null">`e_base_point`=#{ebasePoint}</when> <otherwise> `e_base_point`=NULL</otherwise> </choose>,
                    <choose> <when test="efinalPoint!=null">`e_final_point`=#{efinalPoint}</when> <otherwise> `e_final_point`=NULL</otherwise> </choose>,
                    <choose> <when test="inputTime!=null">`input_time`=#{inputTime,jdbcType=TIMESTAMP}</when> <otherwise> `input_time`=NULL</otherwise> </choose>,
                    <choose> <when test="sbasePoint!=null">`s_base_point`=#{sbasePoint}</when> <otherwise> `s_base_point`=NULL</otherwise> </choose>,
                    <choose> <when test="sfinalPoint!=null">`s_final_point`=#{sfinalPoint}</when> <otherwise> `s_final_point`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="projectId!=null">`project_id`=#{projectId},</when></choose>
                    <choose><when test="ebasePoint!=null">`e_base_point`=#{ebasePoint},</when></choose>
                    <choose><when test="efinalPoint!=null">`e_final_point`=#{efinalPoint},</when></choose>
                    <choose><when test="inputTime!=null">`input_time`=#{inputTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="sbasePoint!=null">`s_base_point`=#{sbasePoint},</when></choose>
                    <choose><when test="sfinalPoint!=null">`s_final_point`=#{sfinalPoint},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `id` = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.projectId!=null">`project_id`=#{item.projectId}</when> <otherwise> `project_id`=NULL</otherwise> </choose>,
                    <choose> <when test="item.ebasePoint!=null">`e_base_point`=#{item.ebasePoint}</when> <otherwise> `e_base_point`=NULL</otherwise> </choose>,
                    <choose> <when test="item.efinalPoint!=null">`e_final_point`=#{item.efinalPoint}</when> <otherwise> `e_final_point`=NULL</otherwise> </choose>,
                    <choose> <when test="item.inputTime!=null">`input_time`=#{item.inputTime,jdbcType=TIMESTAMP}</when> <otherwise> `input_time`=NULL</otherwise> </choose>,
                    <choose> <when test="item.sbasePoint!=null">`s_base_point`=#{item.sbasePoint}</when> <otherwise> `s_base_point`=NULL</otherwise> </choose>,
                    <choose> <when test="item.sfinalPoint!=null">`s_final_point`=#{item.sfinalPoint}</when> <otherwise> `s_final_point`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.projectId!=null">`project_id`=#{item.projectId},</when></choose>
                    <choose> <when test="item.ebasePoint!=null">`e_base_point`=#{item.ebasePoint},</when></choose>
                    <choose> <when test="item.efinalPoint!=null">`e_final_point`=#{item.efinalPoint},</when></choose>
                    <choose> <when test="item.inputTime!=null">`input_time`=#{item.inputTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.sbasePoint!=null">`s_base_point`=#{item.sbasePoint},</when></choose>
                    <choose> <when test="item.sfinalPoint!=null">`s_final_point`=#{item.sfinalPoint},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `id` = #{item.id}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        hx.base_price_special
    </sql>

   <sql id="whereSqlModel">
        <if test="id!=null "> and `id` = #{id}</if>
        <if test="projectId!=null "> and `project_id` = #{projectId}</if>
        <if test="ebasePoint!=null "> and `e_base_point` = #{ebasePoint}</if>
        <if test="efinalPoint!=null "> and `e_final_point` = #{efinalPoint}</if>
        <if test="inputTime!=null "> and `input_time` = #{inputTime,jdbcType=TIMESTAMP}</if>
        <if test="sbasePoint!=null "> and `s_base_point` = #{sbasePoint}</if>
        <if test="sfinalPoint!=null "> and `s_final_point` = #{sfinalPoint}</if>
                <if test="projectIdFirst!=null "> and `project_id` <![CDATA[=]]>
                            #{projectIdFirst}
                </if>
                <if test="inputTimeFirst!=null "> and `input_time` <![CDATA[=]]>
                        #{inputTimeFirst,jdbcType=TIMESTAMP}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'id'">  `id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'project_id'">  `project_id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'e_base_point'">  `e_base_point` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'e_final_point'">  `e_final_point` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'input_time'">  `input_time` </when>
                <when test="safeGroupBy != null and safeGroupBy == 's_base_point'">  `s_base_point` </when>
                <when test="safeGroupBy != null and safeGroupBy == 's_final_point'">  `s_final_point` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'id desc'"> order by  `id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'id asc'"> order by `id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'project_id desc'"> order by  `project_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'project_id asc'"> order by `project_id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'e_base_point desc'"> order by  `e_base_point` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'e_base_point asc'"> order by `e_base_point` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'e_final_point desc'"> order by  `e_final_point` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'e_final_point asc'"> order by `e_final_point` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'input_time desc'"> order by  `input_time` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'input_time asc'"> order by `input_time` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 's_base_point desc'"> order by  `s_base_point` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 's_base_point asc'"> order by `s_base_point` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 's_final_point desc'"> order by  `s_final_point` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 's_final_point asc'"> order by `s_final_point` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>

</mapper>
